Source: wallet
Section: net
Priority: extra
Maintainer: Russ Allbery <rra@debian.org>
Bugs: mailto:rra@debian.org
Build-Depends: debhelper (>= 9), dh-autoreconf, libauthen-sasl-perl,
 libdatetime-perl, libdatetime-format-sqlite-perl, libdbd-sqlite3-perl,
 libdbi-perl, libdbix-class-perl, libheimdal-kadm5-perl, libjson-perl,
 libkrb5-dev, libnet-dns-perl, libnet-ldap-perl, libremctl-dev,
 libsql-translator-perl, libtest-minimumversion-perl, libtest-pod-perl,
 libtest-strict-perl, libtimedate-perl, perl, sqlite3
Standards-Version: 3.9.6
Homepage: http://www.eyrie.org/~eagle/software/wallet/
Vcs-Git: git://git.eyrie.org/kerberos/wallet.git -b debian
Vcs-Browser: http://git.eyrie.org/?p=kerberos/wallet.git

Package: keytab-backend
Architecture: all
Multi-Arch: foreign
Depends: ${misc:Depends}, ${perl:Depends}, krb5-admin-server, perl,
 remctl-server
Description: Provide existing MIT Kerberos keytabs via remctl
 keytab-backend is a service that runs under remctld and allows
 authenticated clients to download Kerberos keytabs from an MIT Kerberos
 KDC without changing the key stored in the Kerberos KDC.  It must run on
 the same host as the Kerberos KDC and uses kadmin.local to extract the
 existing key.  It applies additional ACLs to limit which keys may be
 extracted in this way.  This interface is not needed for Heimdal.

Package: wallet-client
Architecture: any
Multi-Arch: foreign
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Kerberos-authenticated secure data management client
 The wallet is a system for managing secure data, authorization rules to
 retrieve or change that data, and audit rules for documenting actions
 taken on that data.  Objects of various types may be stored in the
 wallet or generated on request and retrieved by authorized users.  The
 wallet tracks ACLs, metadata, and trace information.  It uses Kerberos
 authentication.  One of the object types it supports is Kerberos keytabs,
 making it suitable as a user-accessible front-end to Kerberos kadmind
 with richer ACL and metadata operations.
 .
 This package contains the wallet client, which talks to a remote wallet
 server to store, download, and manage objects.

Package: wallet-server
Architecture: all
Multi-Arch: foreign
Depends: ${misc:Depends}, ${perl:Depends},
 libdatetime-format-sqlite-perl | libdatetime-format-mysql-perl |
 libdatetime-format-pg-perl,
 libdbd-sqlite3-perl | libdbd-mysql-perl | libdbd-pg-perl,
 libdbix-class-perl, libdatetime-perl, libsql-translator-perl,
 libtimedate-perl, remctl-server
Recommends: krb5-user | libheimdal-kadm5-perl, remctl-server (>= 2.14)
Suggests: libauthen-sasl-perl, libnet-duo-perl, libnet-ldap-perl,
 libnet-remctl-perl, libwebauth-perl (>= 4.4.0)
Description: Kerberos-authenticated secure data management server
 The wallet is a system for managing secure data, authorization rules to
 retrieve or change that data, and audit rules for documenting actions
 taken on that data.  Objects of various types may be stored in the
 wallet or generated on request and retrieved by authorized users.  The
 wallet tracks ACLs, metadata, and trace information.  It uses Kerberos
 authentication.  One of the object types it supports is Kerberos keytabs,
 making it suitable as a user-accessible front-end to Kerberos kadmind
 with richer ACL and metadata operations.
 .
 This package contains the wallet server, which runs under remctl,
 maintains the database of object metadata and secure objects, and
 responds to requests from the wallet client.
 .
 This package requires a DBD::* module (libdbd-*-perl) and corresponding
 DateTime::Format::* module (libdatetime-format-*-perl) for the same
 underlying database driver.
